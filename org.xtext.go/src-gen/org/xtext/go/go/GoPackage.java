/**
 * generated by Xtext 2.13.0
 */
package org.xtext.go.go;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.go.go.GoFactory
 * @model kind="package"
 * @generated
 */
public interface GoPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "go";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/go/Go";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "go";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  GoPackage eINSTANCE = org.xtext.go.go.impl.GoPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.GoImpl <em>Go</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.GoImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getGo()
   * @generated
   */
  int GO = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GO__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Go</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GO_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.GreetingImpl <em>Greeting</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.GreetingImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getGreeting()
   * @generated
   */
  int GREETING = 1;

  /**
   * The number of structural features of the '<em>Greeting</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREETING_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.DeclImpl <em>Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.DeclImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getDecl()
   * @generated
   */
  int DECL = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL__TYPE = 1;

  /**
   * The number of structural features of the '<em>Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.DecVarImpl <em>Dec Var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.DecVarImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getDecVar()
   * @generated
   */
  int DEC_VAR = 3;

  /**
   * The feature id for the '<em><b>Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_VAR__DECLARATION = GREETING_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Assignment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_VAR__ASSIGNMENT = GREETING_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Dec Var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_VAR_FEATURE_COUNT = GREETING_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.AtribVarImpl <em>Atrib Var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.AtribVarImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getAtribVar()
   * @generated
   */
  int ATRIB_VAR = 4;

  /**
   * The feature id for the '<em><b>Vars</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRIB_VAR__VARS = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRIB_VAR__TYPE = 1;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRIB_VAR__ATRB = 2;

  /**
   * The number of structural features of the '<em>Atrib Var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRIB_VAR_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.AtribImpl <em>Atrib</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.AtribImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getAtrib()
   * @generated
   */
  int ATRIB = 5;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRIB__VAR = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRIB__TYPE = 1;

  /**
   * The feature id for the '<em><b>Atrib</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRIB__ATRIB = 2;

  /**
   * The number of structural features of the '<em>Atrib</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRIB_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.MultDecVarsImpl <em>Mult Dec Vars</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.MultDecVarsImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getMultDecVars()
   * @generated
   */
  int MULT_DEC_VARS = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_DEC_VARS__NAME = GREETING_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_DEC_VARS__VALUE = GREETING_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Mult Dec Vars</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_DEC_VARS_FEATURE_COUNT = GREETING_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.DecVarsImpl <em>Dec Vars</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.DecVarsImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getDecVars()
   * @generated
   */
  int DEC_VARS = 7;

  /**
   * The feature id for the '<em><b>Vars</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_VARS__VARS = 0;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_VARS__ATRB = 1;

  /**
   * The number of structural features of the '<em>Dec Vars</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_VARS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.SwitchCaseImpl <em>Switch Case</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.SwitchCaseImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getSwitchCase()
   * @generated
   */
  int SWITCH_CASE = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SWITCH_CASE__NAME = GREETING_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Cas</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SWITCH_CASE__CAS = GREETING_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>K</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SWITCH_CASE__K = GREETING_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Switch Case</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SWITCH_CASE_FEATURE_COUNT = GREETING_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.CasesImpl <em>Cases</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.CasesImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getCases()
   * @generated
   */
  int CASES = 9;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASES__X = 0;

  /**
   * The feature id for the '<em><b>V</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASES__V = 1;

  /**
   * The number of structural features of the '<em>Cases</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASES_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.ParamsImpl <em>Params</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.ParamsImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getParams()
   * @generated
   */
  int PARAMS = 10;

  /**
   * The feature id for the '<em><b>Params</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMS__PARAMS = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMS__TYPE = 1;

  /**
   * The number of structural features of the '<em>Params</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.CallForImpl <em>Call For</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.CallForImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getCallFor()
   * @generated
   */
  int CALL_FOR = 17;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_FOR__X = GREETING_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Call For</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_FOR_FEATURE_COUNT = GREETING_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.varForImpl <em>var For</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.varForImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getvarFor()
   * @generated
   */
  int VAR_FOR = 19;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_FOR__X = CALL_FOR__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_FOR__VAR = CALL_FOR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_FOR__ATRB = CALL_FOR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_FOR__RIGHT = CALL_FOR_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_FOR__LEFT = CALL_FOR_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>var For</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_FOR_FEATURE_COUNT = CALL_FOR_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.OperationsOneEqualsImpl <em>Operations One Equals</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.OperationsOneEqualsImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getOperationsOneEquals()
   * @generated
   */
  int OPERATIONS_ONE_EQUALS = 11;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE_EQUALS__X = VAR_FOR__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE_EQUALS__VAR = VAR_FOR__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE_EQUALS__ATRB = VAR_FOR__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE_EQUALS__RIGHT = VAR_FOR__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE_EQUALS__LEFT = VAR_FOR__LEFT;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE_EQUALS__NAME = VAR_FOR_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Operations One Equals</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE_EQUALS_FEATURE_COUNT = VAR_FOR_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.ConditionImpl <em>Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.ConditionImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getCondition()
   * @generated
   */
  int CONDITION = 12;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION__IF = GREETING_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Elseif</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION__ELSEIF = GREETING_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION__ELSE = GREETING_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_FEATURE_COUNT = GREETING_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.ElseIfConditionImpl <em>Else If Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.ElseIfConditionImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getElseIfCondition()
   * @generated
   */
  int ELSE_IF_CONDITION = 14;

  /**
   * The number of structural features of the '<em>Else If Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_IF_CONDITION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.IfConditionImpl <em>If Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.IfConditionImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getIfCondition()
   * @generated
   */
  int IF_CONDITION = 13;

  /**
   * The feature id for the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_CONDITION__COND = ELSE_IF_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_CONDITION__THEN = ELSE_IF_CONDITION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>If Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_CONDITION_FEATURE_COUNT = ELSE_IF_CONDITION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.ElseConditionImpl <em>Else Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.ElseConditionImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getElseCondition()
   * @generated
   */
  int ELSE_CONDITION = 15;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_CONDITION__THEN = 0;

  /**
   * The number of structural features of the '<em>Else Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_CONDITION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.ExpressionImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 16;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__X = VAR_FOR__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__VAR = VAR_FOR__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__ATRB = VAR_FOR__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__RIGHT = VAR_FOR__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LEFT = VAR_FOR__LEFT;

  /**
   * The feature id for the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__SUM = VAR_FOR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__SUB = VAR_FOR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = VAR_FOR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.operationsOneImpl <em>operations One</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.operationsOneImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getoperationsOne()
   * @generated
   */
  int OPERATIONS_ONE = 18;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE__X = VAR_FOR__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE__VAR = VAR_FOR__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE__ATRB = VAR_FOR__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE__RIGHT = VAR_FOR__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE__LEFT = VAR_FOR__LEFT;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE__NAME = VAR_FOR_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>operations One</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_ONE_FEATURE_COUNT = VAR_FOR_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.DecFuncImpl <em>Dec Func</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.DecFuncImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getDecFunc()
   * @generated
   */
  int DEC_FUNC = 20;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_FUNC__NAME = GREETING_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_FUNC__PARAM = GREETING_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Return</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_FUNC__RETURN = GREETING_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_FUNC__ARGS = GREETING_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Dec Func</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEC_FUNC_FEATURE_COUNT = GREETING_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.CallFuncImpl <em>Call Func</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.CallFuncImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getCallFunc()
   * @generated
   */
  int CALL_FUNC = 21;

  /**
   * The feature id for the '<em><b>Name Func</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_FUNC__NAME_FUNC = GREETING_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_FUNC__PARAM = GREETING_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Call Func</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALL_FUNC_FEATURE_COUNT = GREETING_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.DataTypeImpl <em>Data Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.DataTypeImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getDataType()
   * @generated
   */
  int DATA_TYPE = 22;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATA_TYPE__NAME = GREETING_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Data Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATA_TYPE_FEATURE_COUNT = GREETING_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.AdditionImpl <em>Addition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.AdditionImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getAddition()
   * @generated
   */
  int ADDITION = 23;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__X = EXPRESSION__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__VAR = EXPRESSION__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__ATRB = EXPRESSION__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__SUM = EXPRESSION__SUM;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION__SUB = EXPRESSION__SUB;

  /**
   * The number of structural features of the '<em>Addition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.SubtrationImpl <em>Subtration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.SubtrationImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getSubtration()
   * @generated
   */
  int SUBTRATION = 24;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBTRATION__X = EXPRESSION__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBTRATION__VAR = EXPRESSION__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBTRATION__ATRB = EXPRESSION__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBTRATION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBTRATION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBTRATION__SUM = EXPRESSION__SUM;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBTRATION__SUB = EXPRESSION__SUB;

  /**
   * The number of structural features of the '<em>Subtration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBTRATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.MultiplicationImpl <em>Multiplication</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.MultiplicationImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getMultiplication()
   * @generated
   */
  int MULTIPLICATION = 25;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__X = EXPRESSION__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__VAR = EXPRESSION__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__ATRB = EXPRESSION__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__SUM = EXPRESSION__SUM;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION__SUB = EXPRESSION__SUB;

  /**
   * The number of structural features of the '<em>Multiplication</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.DivisionImpl <em>Division</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.DivisionImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getDivision()
   * @generated
   */
  int DIVISION = 26;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION__X = EXPRESSION__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION__VAR = EXPRESSION__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION__ATRB = EXPRESSION__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION__SUM = EXPRESSION__SUM;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION__SUB = EXPRESSION__SUB;

  /**
   * The number of structural features of the '<em>Division</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.OrExpressionImpl <em>Or Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.OrExpressionImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getOrExpression()
   * @generated
   */
  int OR_EXPRESSION = 27;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__X = EXPRESSION__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__VAR = EXPRESSION__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__ATRB = EXPRESSION__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__SUM = EXPRESSION__SUM;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__SUB = EXPRESSION__SUB;

  /**
   * The number of structural features of the '<em>Or Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.AndExpressionImpl <em>And Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.AndExpressionImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getAndExpression()
   * @generated
   */
  int AND_EXPRESSION = 28;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__X = EXPRESSION__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__VAR = EXPRESSION__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__ATRB = EXPRESSION__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__SUM = EXPRESSION__SUM;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__SUB = EXPRESSION__SUB;

  /**
   * The number of structural features of the '<em>And Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.ComparisonExpressionImpl <em>Comparison Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.ComparisonExpressionImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getComparisonExpression()
   * @generated
   */
  int COMPARISON_EXPRESSION = 29;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__X = EXPRESSION__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__VAR = EXPRESSION__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__ATRB = EXPRESSION__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__SUM = EXPRESSION__SUM;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__SUB = EXPRESSION__SUB;

  /**
   * The number of structural features of the '<em>Comparison Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.LiteralImpl <em>Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.LiteralImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getLiteral()
   * @generated
   */
  int LITERAL = 30;

  /**
   * The feature id for the '<em><b>X</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__X = EXPRESSION__X;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__VAR = EXPRESSION__VAR;

  /**
   * The feature id for the '<em><b>Atrb</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__ATRB = EXPRESSION__ATRB;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__SUM = EXPRESSION__SUM;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__SUB = EXPRESSION__SUB;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Go <em>Go</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Go</em>'.
   * @see org.xtext.go.go.Go
   * @generated
   */
  EClass getGo();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.go.go.Go#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see org.xtext.go.go.Go#getElements()
   * @see #getGo()
   * @generated
   */
  EReference getGo_Elements();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Greeting <em>Greeting</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Greeting</em>'.
   * @see org.xtext.go.go.Greeting
   * @generated
   */
  EClass getGreeting();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Decl <em>Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Decl</em>'.
   * @see org.xtext.go.go.Decl
   * @generated
   */
  EClass getDecl();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.Decl#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.go.go.Decl#getName()
   * @see #getDecl()
   * @generated
   */
  EAttribute getDecl_Name();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.Decl#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.go.go.Decl#getType()
   * @see #getDecl()
   * @generated
   */
  EAttribute getDecl_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.DecVar <em>Dec Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dec Var</em>'.
   * @see org.xtext.go.go.DecVar
   * @generated
   */
  EClass getDecVar();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.DecVar#getDeclaration <em>Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Declaration</em>'.
   * @see org.xtext.go.go.DecVar#getDeclaration()
   * @see #getDecVar()
   * @generated
   */
  EReference getDecVar_Declaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.DecVar#getAssignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Assignment</em>'.
   * @see org.xtext.go.go.DecVar#getAssignment()
   * @see #getDecVar()
   * @generated
   */
  EReference getDecVar_Assignment();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.AtribVar <em>Atrib Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Atrib Var</em>'.
   * @see org.xtext.go.go.AtribVar
   * @generated
   */
  EClass getAtribVar();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.go.go.AtribVar#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Vars</em>'.
   * @see org.xtext.go.go.AtribVar#getVars()
   * @see #getAtribVar()
   * @generated
   */
  EAttribute getAtribVar_Vars();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.AtribVar#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.go.go.AtribVar#getType()
   * @see #getAtribVar()
   * @generated
   */
  EAttribute getAtribVar_Type();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.go.go.AtribVar#getAtrb <em>Atrb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Atrb</em>'.
   * @see org.xtext.go.go.AtribVar#getAtrb()
   * @see #getAtribVar()
   * @generated
   */
  EAttribute getAtribVar_Atrb();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Atrib <em>Atrib</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Atrib</em>'.
   * @see org.xtext.go.go.Atrib
   * @generated
   */
  EClass getAtrib();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.Atrib#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see org.xtext.go.go.Atrib#getVar()
   * @see #getAtrib()
   * @generated
   */
  EAttribute getAtrib_Var();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.Atrib#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.go.go.Atrib#getType()
   * @see #getAtrib()
   * @generated
   */
  EAttribute getAtrib_Type();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.Atrib#getAtrib <em>Atrib</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Atrib</em>'.
   * @see org.xtext.go.go.Atrib#getAtrib()
   * @see #getAtrib()
   * @generated
   */
  EAttribute getAtrib_Atrib();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.MultDecVars <em>Mult Dec Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mult Dec Vars</em>'.
   * @see org.xtext.go.go.MultDecVars
   * @generated
   */
  EClass getMultDecVars();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.MultDecVars#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.go.go.MultDecVars#getName()
   * @see #getMultDecVars()
   * @generated
   */
  EAttribute getMultDecVars_Name();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.MultDecVars#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.go.go.MultDecVars#getValue()
   * @see #getMultDecVars()
   * @generated
   */
  EAttribute getMultDecVars_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.DecVars <em>Dec Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dec Vars</em>'.
   * @see org.xtext.go.go.DecVars
   * @generated
   */
  EClass getDecVars();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.go.go.DecVars#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Vars</em>'.
   * @see org.xtext.go.go.DecVars#getVars()
   * @see #getDecVars()
   * @generated
   */
  EAttribute getDecVars_Vars();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.go.go.DecVars#getAtrb <em>Atrb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Atrb</em>'.
   * @see org.xtext.go.go.DecVars#getAtrb()
   * @see #getDecVars()
   * @generated
   */
  EAttribute getDecVars_Atrb();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.SwitchCase <em>Switch Case</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Switch Case</em>'.
   * @see org.xtext.go.go.SwitchCase
   * @generated
   */
  EClass getSwitchCase();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.SwitchCase#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.go.go.SwitchCase#getName()
   * @see #getSwitchCase()
   * @generated
   */
  EAttribute getSwitchCase_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.SwitchCase#getCas <em>Cas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cas</em>'.
   * @see org.xtext.go.go.SwitchCase#getCas()
   * @see #getSwitchCase()
   * @generated
   */
  EReference getSwitchCase_Cas();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.SwitchCase#getK <em>K</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>K</em>'.
   * @see org.xtext.go.go.SwitchCase#getK()
   * @see #getSwitchCase()
   * @generated
   */
  EReference getSwitchCase_K();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Cases <em>Cases</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cases</em>'.
   * @see org.xtext.go.go.Cases
   * @generated
   */
  EClass getCases();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.Cases#getX <em>X</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>X</em>'.
   * @see org.xtext.go.go.Cases#getX()
   * @see #getCases()
   * @generated
   */
  EReference getCases_X();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.Cases#getV <em>V</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>V</em>'.
   * @see org.xtext.go.go.Cases#getV()
   * @see #getCases()
   * @generated
   */
  EReference getCases_V();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Params <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Params</em>'.
   * @see org.xtext.go.go.Params
   * @generated
   */
  EClass getParams();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.go.go.Params#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Params</em>'.
   * @see org.xtext.go.go.Params#getParams()
   * @see #getParams()
   * @generated
   */
  EAttribute getParams_Params();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.go.go.Params#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Type</em>'.
   * @see org.xtext.go.go.Params#getType()
   * @see #getParams()
   * @generated
   */
  EAttribute getParams_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.OperationsOneEquals <em>Operations One Equals</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operations One Equals</em>'.
   * @see org.xtext.go.go.OperationsOneEquals
   * @generated
   */
  EClass getOperationsOneEquals();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.OperationsOneEquals#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.go.go.OperationsOneEquals#getName()
   * @see #getOperationsOneEquals()
   * @generated
   */
  EAttribute getOperationsOneEquals_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Condition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Condition</em>'.
   * @see org.xtext.go.go.Condition
   * @generated
   */
  EClass getCondition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.Condition#getIf <em>If</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>If</em>'.
   * @see org.xtext.go.go.Condition#getIf()
   * @see #getCondition()
   * @generated
   */
  EReference getCondition_If();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.Condition#getElseif <em>Elseif</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Elseif</em>'.
   * @see org.xtext.go.go.Condition#getElseif()
   * @see #getCondition()
   * @generated
   */
  EReference getCondition_Elseif();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.Condition#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else</em>'.
   * @see org.xtext.go.go.Condition#getElse()
   * @see #getCondition()
   * @generated
   */
  EReference getCondition_Else();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.IfCondition <em>If Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Condition</em>'.
   * @see org.xtext.go.go.IfCondition
   * @generated
   */
  EClass getIfCondition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.IfCondition#getCond <em>Cond</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cond</em>'.
   * @see org.xtext.go.go.IfCondition#getCond()
   * @see #getIfCondition()
   * @generated
   */
  EReference getIfCondition_Cond();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.IfCondition#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see org.xtext.go.go.IfCondition#getThen()
   * @see #getIfCondition()
   * @generated
   */
  EReference getIfCondition_Then();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.ElseIfCondition <em>Else If Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Else If Condition</em>'.
   * @see org.xtext.go.go.ElseIfCondition
   * @generated
   */
  EClass getElseIfCondition();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.ElseCondition <em>Else Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Else Condition</em>'.
   * @see org.xtext.go.go.ElseCondition
   * @generated
   */
  EClass getElseCondition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.ElseCondition#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see org.xtext.go.go.ElseCondition#getThen()
   * @see #getElseCondition()
   * @generated
   */
  EReference getElseCondition_Then();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.go.go.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.Expression#getSum <em>Sum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sum</em>'.
   * @see org.xtext.go.go.Expression#getSum()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Sum();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.Expression#getSub <em>Sub</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub</em>'.
   * @see org.xtext.go.go.Expression#getSub()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Sub();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.CallFor <em>Call For</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Call For</em>'.
   * @see org.xtext.go.go.CallFor
   * @generated
   */
  EClass getCallFor();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.CallFor#getX <em>X</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>X</em>'.
   * @see org.xtext.go.go.CallFor#getX()
   * @see #getCallFor()
   * @generated
   */
  EReference getCallFor_X();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.operationsOne <em>operations One</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>operations One</em>'.
   * @see org.xtext.go.go.operationsOne
   * @generated
   */
  EClass getoperationsOne();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.operationsOne#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.go.go.operationsOne#getName()
   * @see #getoperationsOne()
   * @generated
   */
  EAttribute getoperationsOne_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.varFor <em>var For</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var For</em>'.
   * @see org.xtext.go.go.varFor
   * @generated
   */
  EClass getvarFor();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.go.go.varFor#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Var</em>'.
   * @see org.xtext.go.go.varFor#getVar()
   * @see #getvarFor()
   * @generated
   */
  EAttribute getvarFor_Var();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.go.go.varFor#getAtrb <em>Atrb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Atrb</em>'.
   * @see org.xtext.go.go.varFor#getAtrb()
   * @see #getvarFor()
   * @generated
   */
  EAttribute getvarFor_Atrb();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.varFor#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.go.go.varFor#getRight()
   * @see #getvarFor()
   * @generated
   */
  EReference getvarFor_Right();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.varFor#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.go.go.varFor#getLeft()
   * @see #getvarFor()
   * @generated
   */
  EReference getvarFor_Left();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.DecFunc <em>Dec Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dec Func</em>'.
   * @see org.xtext.go.go.DecFunc
   * @generated
   */
  EClass getDecFunc();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.DecFunc#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.go.go.DecFunc#getName()
   * @see #getDecFunc()
   * @generated
   */
  EAttribute getDecFunc_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.DecFunc#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param</em>'.
   * @see org.xtext.go.go.DecFunc#getParam()
   * @see #getDecFunc()
   * @generated
   */
  EReference getDecFunc_Param();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.DecFunc#getReturn <em>Return</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Return</em>'.
   * @see org.xtext.go.go.DecFunc#getReturn()
   * @see #getDecFunc()
   * @generated
   */
  EAttribute getDecFunc_Return();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.go.go.DecFunc#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see org.xtext.go.go.DecFunc#getArgs()
   * @see #getDecFunc()
   * @generated
   */
  EReference getDecFunc_Args();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.CallFunc <em>Call Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Call Func</em>'.
   * @see org.xtext.go.go.CallFunc
   * @generated
   */
  EClass getCallFunc();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.CallFunc#getNameFunc <em>Name Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name Func</em>'.
   * @see org.xtext.go.go.CallFunc#getNameFunc()
   * @see #getCallFunc()
   * @generated
   */
  EAttribute getCallFunc_NameFunc();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.CallFunc#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param</em>'.
   * @see org.xtext.go.go.CallFunc#getParam()
   * @see #getCallFunc()
   * @generated
   */
  EReference getCallFunc_Param();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.DataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Data Type</em>'.
   * @see org.xtext.go.go.DataType
   * @generated
   */
  EClass getDataType();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.DataType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.go.go.DataType#getName()
   * @see #getDataType()
   * @generated
   */
  EAttribute getDataType_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Addition <em>Addition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Addition</em>'.
   * @see org.xtext.go.go.Addition
   * @generated
   */
  EClass getAddition();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Subtration <em>Subtration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Subtration</em>'.
   * @see org.xtext.go.go.Subtration
   * @generated
   */
  EClass getSubtration();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Multiplication <em>Multiplication</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplication</em>'.
   * @see org.xtext.go.go.Multiplication
   * @generated
   */
  EClass getMultiplication();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Division <em>Division</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Division</em>'.
   * @see org.xtext.go.go.Division
   * @generated
   */
  EClass getDivision();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.OrExpression <em>Or Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or Expression</em>'.
   * @see org.xtext.go.go.OrExpression
   * @generated
   */
  EClass getOrExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.AndExpression <em>And Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And Expression</em>'.
   * @see org.xtext.go.go.AndExpression
   * @generated
   */
  EClass getAndExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.ComparisonExpression <em>Comparison Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comparison Expression</em>'.
   * @see org.xtext.go.go.ComparisonExpression
   * @generated
   */
  EClass getComparisonExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal</em>'.
   * @see org.xtext.go.go.Literal
   * @generated
   */
  EClass getLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.Literal#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.go.go.Literal#getValue()
   * @see #getLiteral()
   * @generated
   */
  EAttribute getLiteral_Value();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  GoFactory getGoFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.GoImpl <em>Go</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.GoImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getGo()
     * @generated
     */
    EClass GO = eINSTANCE.getGo();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GO__ELEMENTS = eINSTANCE.getGo_Elements();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.GreetingImpl <em>Greeting</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.GreetingImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getGreeting()
     * @generated
     */
    EClass GREETING = eINSTANCE.getGreeting();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.DeclImpl <em>Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.DeclImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getDecl()
     * @generated
     */
    EClass DECL = eINSTANCE.getDecl();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECL__NAME = eINSTANCE.getDecl_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECL__TYPE = eINSTANCE.getDecl_Type();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.DecVarImpl <em>Dec Var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.DecVarImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getDecVar()
     * @generated
     */
    EClass DEC_VAR = eINSTANCE.getDecVar();

    /**
     * The meta object literal for the '<em><b>Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEC_VAR__DECLARATION = eINSTANCE.getDecVar_Declaration();

    /**
     * The meta object literal for the '<em><b>Assignment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEC_VAR__ASSIGNMENT = eINSTANCE.getDecVar_Assignment();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.AtribVarImpl <em>Atrib Var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.AtribVarImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getAtribVar()
     * @generated
     */
    EClass ATRIB_VAR = eINSTANCE.getAtribVar();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATRIB_VAR__VARS = eINSTANCE.getAtribVar_Vars();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATRIB_VAR__TYPE = eINSTANCE.getAtribVar_Type();

    /**
     * The meta object literal for the '<em><b>Atrb</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATRIB_VAR__ATRB = eINSTANCE.getAtribVar_Atrb();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.AtribImpl <em>Atrib</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.AtribImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getAtrib()
     * @generated
     */
    EClass ATRIB = eINSTANCE.getAtrib();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATRIB__VAR = eINSTANCE.getAtrib_Var();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATRIB__TYPE = eINSTANCE.getAtrib_Type();

    /**
     * The meta object literal for the '<em><b>Atrib</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATRIB__ATRIB = eINSTANCE.getAtrib_Atrib();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.MultDecVarsImpl <em>Mult Dec Vars</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.MultDecVarsImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getMultDecVars()
     * @generated
     */
    EClass MULT_DEC_VARS = eINSTANCE.getMultDecVars();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULT_DEC_VARS__NAME = eINSTANCE.getMultDecVars_Name();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULT_DEC_VARS__VALUE = eINSTANCE.getMultDecVars_Value();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.DecVarsImpl <em>Dec Vars</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.DecVarsImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getDecVars()
     * @generated
     */
    EClass DEC_VARS = eINSTANCE.getDecVars();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEC_VARS__VARS = eINSTANCE.getDecVars_Vars();

    /**
     * The meta object literal for the '<em><b>Atrb</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEC_VARS__ATRB = eINSTANCE.getDecVars_Atrb();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.SwitchCaseImpl <em>Switch Case</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.SwitchCaseImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getSwitchCase()
     * @generated
     */
    EClass SWITCH_CASE = eINSTANCE.getSwitchCase();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SWITCH_CASE__NAME = eINSTANCE.getSwitchCase_Name();

    /**
     * The meta object literal for the '<em><b>Cas</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SWITCH_CASE__CAS = eINSTANCE.getSwitchCase_Cas();

    /**
     * The meta object literal for the '<em><b>K</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SWITCH_CASE__K = eINSTANCE.getSwitchCase_K();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.CasesImpl <em>Cases</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.CasesImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getCases()
     * @generated
     */
    EClass CASES = eINSTANCE.getCases();

    /**
     * The meta object literal for the '<em><b>X</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASES__X = eINSTANCE.getCases_X();

    /**
     * The meta object literal for the '<em><b>V</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASES__V = eINSTANCE.getCases_V();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.ParamsImpl <em>Params</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.ParamsImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getParams()
     * @generated
     */
    EClass PARAMS = eINSTANCE.getParams();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMS__PARAMS = eINSTANCE.getParams_Params();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMS__TYPE = eINSTANCE.getParams_Type();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.OperationsOneEqualsImpl <em>Operations One Equals</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.OperationsOneEqualsImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getOperationsOneEquals()
     * @generated
     */
    EClass OPERATIONS_ONE_EQUALS = eINSTANCE.getOperationsOneEquals();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATIONS_ONE_EQUALS__NAME = eINSTANCE.getOperationsOneEquals_Name();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.ConditionImpl <em>Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.ConditionImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getCondition()
     * @generated
     */
    EClass CONDITION = eINSTANCE.getCondition();

    /**
     * The meta object literal for the '<em><b>If</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITION__IF = eINSTANCE.getCondition_If();

    /**
     * The meta object literal for the '<em><b>Elseif</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITION__ELSEIF = eINSTANCE.getCondition_Elseif();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITION__ELSE = eINSTANCE.getCondition_Else();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.IfConditionImpl <em>If Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.IfConditionImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getIfCondition()
     * @generated
     */
    EClass IF_CONDITION = eINSTANCE.getIfCondition();

    /**
     * The meta object literal for the '<em><b>Cond</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_CONDITION__COND = eINSTANCE.getIfCondition_Cond();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_CONDITION__THEN = eINSTANCE.getIfCondition_Then();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.ElseIfConditionImpl <em>Else If Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.ElseIfConditionImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getElseIfCondition()
     * @generated
     */
    EClass ELSE_IF_CONDITION = eINSTANCE.getElseIfCondition();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.ElseConditionImpl <em>Else Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.ElseConditionImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getElseCondition()
     * @generated
     */
    EClass ELSE_CONDITION = eINSTANCE.getElseCondition();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELSE_CONDITION__THEN = eINSTANCE.getElseCondition_Then();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.ExpressionImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Sum</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__SUM = eINSTANCE.getExpression_Sum();

    /**
     * The meta object literal for the '<em><b>Sub</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__SUB = eINSTANCE.getExpression_Sub();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.CallForImpl <em>Call For</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.CallForImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getCallFor()
     * @generated
     */
    EClass CALL_FOR = eINSTANCE.getCallFor();

    /**
     * The meta object literal for the '<em><b>X</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CALL_FOR__X = eINSTANCE.getCallFor_X();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.operationsOneImpl <em>operations One</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.operationsOneImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getoperationsOne()
     * @generated
     */
    EClass OPERATIONS_ONE = eINSTANCE.getoperationsOne();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATIONS_ONE__NAME = eINSTANCE.getoperationsOne_Name();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.varForImpl <em>var For</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.varForImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getvarFor()
     * @generated
     */
    EClass VAR_FOR = eINSTANCE.getvarFor();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_FOR__VAR = eINSTANCE.getvarFor_Var();

    /**
     * The meta object literal for the '<em><b>Atrb</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_FOR__ATRB = eINSTANCE.getvarFor_Atrb();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_FOR__RIGHT = eINSTANCE.getvarFor_Right();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_FOR__LEFT = eINSTANCE.getvarFor_Left();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.DecFuncImpl <em>Dec Func</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.DecFuncImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getDecFunc()
     * @generated
     */
    EClass DEC_FUNC = eINSTANCE.getDecFunc();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEC_FUNC__NAME = eINSTANCE.getDecFunc_Name();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEC_FUNC__PARAM = eINSTANCE.getDecFunc_Param();

    /**
     * The meta object literal for the '<em><b>Return</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEC_FUNC__RETURN = eINSTANCE.getDecFunc_Return();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEC_FUNC__ARGS = eINSTANCE.getDecFunc_Args();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.CallFuncImpl <em>Call Func</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.CallFuncImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getCallFunc()
     * @generated
     */
    EClass CALL_FUNC = eINSTANCE.getCallFunc();

    /**
     * The meta object literal for the '<em><b>Name Func</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CALL_FUNC__NAME_FUNC = eINSTANCE.getCallFunc_NameFunc();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CALL_FUNC__PARAM = eINSTANCE.getCallFunc_Param();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.DataTypeImpl <em>Data Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.DataTypeImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getDataType()
     * @generated
     */
    EClass DATA_TYPE = eINSTANCE.getDataType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DATA_TYPE__NAME = eINSTANCE.getDataType_Name();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.AdditionImpl <em>Addition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.AdditionImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getAddition()
     * @generated
     */
    EClass ADDITION = eINSTANCE.getAddition();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.SubtrationImpl <em>Subtration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.SubtrationImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getSubtration()
     * @generated
     */
    EClass SUBTRATION = eINSTANCE.getSubtration();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.MultiplicationImpl <em>Multiplication</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.MultiplicationImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getMultiplication()
     * @generated
     */
    EClass MULTIPLICATION = eINSTANCE.getMultiplication();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.DivisionImpl <em>Division</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.DivisionImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getDivision()
     * @generated
     */
    EClass DIVISION = eINSTANCE.getDivision();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.OrExpressionImpl <em>Or Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.OrExpressionImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getOrExpression()
     * @generated
     */
    EClass OR_EXPRESSION = eINSTANCE.getOrExpression();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.AndExpressionImpl <em>And Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.AndExpressionImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getAndExpression()
     * @generated
     */
    EClass AND_EXPRESSION = eINSTANCE.getAndExpression();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.ComparisonExpressionImpl <em>Comparison Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.ComparisonExpressionImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getComparisonExpression()
     * @generated
     */
    EClass COMPARISON_EXPRESSION = eINSTANCE.getComparisonExpression();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.LiteralImpl <em>Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.LiteralImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getLiteral()
     * @generated
     */
    EClass LITERAL = eINSTANCE.getLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL__VALUE = eINSTANCE.getLiteral_Value();

  }

} //GoPackage

/**
 * generated by Xtext 2.13.0
 */
package org.xtext.go.go;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.go.go.GoFactory
 * @model kind="package"
 * @generated
 */
public interface GoPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "go";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/go/Go";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "go";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  GoPackage eINSTANCE = org.xtext.go.go.impl.GoPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.GoImpl <em>Go</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.GoImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getGo()
   * @generated
   */
  int GO = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GO__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Go</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GO_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.GreetingImpl <em>Greeting</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.GreetingImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getGreeting()
   * @generated
   */
  int GREETING = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREETING__NAME = 0;

  /**
   * The number of structural features of the '<em>Greeting</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GREETING_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.TypeImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getType()
   * @generated
   */
  int TYPE = 2;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.TypeNameImpl <em>Type Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.TypeNameImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getTypeName()
   * @generated
   */
  int TYPE_NAME = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_NAME__NAME = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Type Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_NAME_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.TypeSpecImpl <em>Type Spec</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.TypeSpecImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getTypeSpec()
   * @generated
   */
  int TYPE_SPEC = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_SPEC__NAME = GREETING__NAME;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_SPEC__TYPE = GREETING_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Type Spec</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_SPEC_FEATURE_COUNT = GREETING_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.TypeDefImpl <em>Type Def</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.TypeDefImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getTypeDef()
   * @generated
   */
  int TYPE_DEF = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEF__NAME = TYPE_SPEC__NAME;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEF__TYPE = TYPE_SPEC__TYPE;

  /**
   * The number of structural features of the '<em>Type Def</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEF_FEATURE_COUNT = TYPE_SPEC_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.AliasDeclImpl <em>Alias Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.AliasDeclImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getAliasDecl()
   * @generated
   */
  int ALIAS_DECL = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIAS_DECL__NAME = TYPE_SPEC__NAME;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIAS_DECL__TYPE = TYPE_SPEC__TYPE;

  /**
   * The number of structural features of the '<em>Alias Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIAS_DECL_FEATURE_COUNT = TYPE_SPEC_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.EntityImpl <em>Entity</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.EntityImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getEntity()
   * @generated
   */
  int ENTITY = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY__NAME = GREETING__NAME;

  /**
   * The number of structural features of the '<em>Entity</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FEATURE_COUNT = GREETING_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.go.go.impl.DataTypeImpl <em>Data Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.go.go.impl.DataTypeImpl
   * @see org.xtext.go.go.impl.GoPackageImpl#getDataType()
   * @generated
   */
  int DATA_TYPE = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATA_TYPE__NAME = GREETING__NAME;

  /**
   * The number of structural features of the '<em>Data Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DATA_TYPE_FEATURE_COUNT = GREETING_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Go <em>Go</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Go</em>'.
   * @see org.xtext.go.go.Go
   * @generated
   */
  EClass getGo();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.go.go.Go#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see org.xtext.go.go.Go#getElements()
   * @see #getGo()
   * @generated
   */
  EReference getGo_Elements();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Greeting <em>Greeting</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Greeting</em>'.
   * @see org.xtext.go.go.Greeting
   * @generated
   */
  EClass getGreeting();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.Greeting#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.go.go.Greeting#getName()
   * @see #getGreeting()
   * @generated
   */
  EAttribute getGreeting_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see org.xtext.go.go.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.TypeName <em>Type Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Name</em>'.
   * @see org.xtext.go.go.TypeName
   * @generated
   */
  EClass getTypeName();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.go.go.TypeName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.go.go.TypeName#getName()
   * @see #getTypeName()
   * @generated
   */
  EAttribute getTypeName_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.TypeSpec <em>Type Spec</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Spec</em>'.
   * @see org.xtext.go.go.TypeSpec
   * @generated
   */
  EClass getTypeSpec();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.go.go.TypeSpec#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.go.go.TypeSpec#getType()
   * @see #getTypeSpec()
   * @generated
   */
  EReference getTypeSpec_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.TypeDef <em>Type Def</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Def</em>'.
   * @see org.xtext.go.go.TypeDef
   * @generated
   */
  EClass getTypeDef();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.AliasDecl <em>Alias Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Alias Decl</em>'.
   * @see org.xtext.go.go.AliasDecl
   * @generated
   */
  EClass getAliasDecl();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.Entity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Entity</em>'.
   * @see org.xtext.go.go.Entity
   * @generated
   */
  EClass getEntity();

  /**
   * Returns the meta object for class '{@link org.xtext.go.go.DataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Data Type</em>'.
   * @see org.xtext.go.go.DataType
   * @generated
   */
  EClass getDataType();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  GoFactory getGoFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.GoImpl <em>Go</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.GoImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getGo()
     * @generated
     */
    EClass GO = eINSTANCE.getGo();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GO__ELEMENTS = eINSTANCE.getGo_Elements();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.GreetingImpl <em>Greeting</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.GreetingImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getGreeting()
     * @generated
     */
    EClass GREETING = eINSTANCE.getGreeting();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GREETING__NAME = eINSTANCE.getGreeting_Name();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.TypeImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.TypeNameImpl <em>Type Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.TypeNameImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getTypeName()
     * @generated
     */
    EClass TYPE_NAME = eINSTANCE.getTypeName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_NAME__NAME = eINSTANCE.getTypeName_Name();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.TypeSpecImpl <em>Type Spec</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.TypeSpecImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getTypeSpec()
     * @generated
     */
    EClass TYPE_SPEC = eINSTANCE.getTypeSpec();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_SPEC__TYPE = eINSTANCE.getTypeSpec_Type();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.TypeDefImpl <em>Type Def</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.TypeDefImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getTypeDef()
     * @generated
     */
    EClass TYPE_DEF = eINSTANCE.getTypeDef();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.AliasDeclImpl <em>Alias Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.AliasDeclImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getAliasDecl()
     * @generated
     */
    EClass ALIAS_DECL = eINSTANCE.getAliasDecl();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.EntityImpl <em>Entity</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.EntityImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getEntity()
     * @generated
     */
    EClass ENTITY = eINSTANCE.getEntity();

    /**
     * The meta object literal for the '{@link org.xtext.go.go.impl.DataTypeImpl <em>Data Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.go.go.impl.DataTypeImpl
     * @see org.xtext.go.go.impl.GoPackageImpl#getDataType()
     * @generated
     */
    EClass DATA_TYPE = eINSTANCE.getDataType();

  }

} //GoPackage

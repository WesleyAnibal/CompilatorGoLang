/**
 * generated by Xtext 2.14.0
 */
package org.xtext.go.go.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.go.go.FunctionBody;
import org.xtext.go.go.FunctionReturn;
import org.xtext.go.go.GoPackage;
import org.xtext.go.go.Greeting;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Function Body</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.go.go.impl.FunctionBodyImpl#getArgs <em>Args</em>}</li>
 *   <li>{@link org.xtext.go.go.impl.FunctionBodyImpl#getRet <em>Ret</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class FunctionBodyImpl extends MinimalEObjectImpl.Container implements FunctionBody
{
  /**
   * The cached value of the '{@link #getArgs() <em>Args</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgs()
   * @generated
   * @ordered
   */
  protected EList<Greeting> args;

  /**
   * The cached value of the '{@link #getRet() <em>Ret</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRet()
   * @generated
   * @ordered
   */
  protected FunctionReturn ret;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionBodyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.FUNCTION_BODY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Greeting> getArgs()
  {
    if (args == null)
    {
      args = new EObjectContainmentEList<Greeting>(Greeting.class, this, GoPackage.FUNCTION_BODY__ARGS);
    }
    return args;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionReturn getRet()
  {
    return ret;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRet(FunctionReturn newRet, NotificationChain msgs)
  {
    FunctionReturn oldRet = ret;
    ret = newRet;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.FUNCTION_BODY__RET, oldRet, newRet);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRet(FunctionReturn newRet)
  {
    if (newRet != ret)
    {
      NotificationChain msgs = null;
      if (ret != null)
        msgs = ((InternalEObject)ret).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.FUNCTION_BODY__RET, null, msgs);
      if (newRet != null)
        msgs = ((InternalEObject)newRet).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.FUNCTION_BODY__RET, null, msgs);
      msgs = basicSetRet(newRet, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.FUNCTION_BODY__RET, newRet, newRet));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.FUNCTION_BODY__ARGS:
        return ((InternalEList<?>)getArgs()).basicRemove(otherEnd, msgs);
      case GoPackage.FUNCTION_BODY__RET:
        return basicSetRet(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.FUNCTION_BODY__ARGS:
        return getArgs();
      case GoPackage.FUNCTION_BODY__RET:
        return getRet();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.FUNCTION_BODY__ARGS:
        getArgs().clear();
        getArgs().addAll((Collection<? extends Greeting>)newValue);
        return;
      case GoPackage.FUNCTION_BODY__RET:
        setRet((FunctionReturn)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.FUNCTION_BODY__ARGS:
        getArgs().clear();
        return;
      case GoPackage.FUNCTION_BODY__RET:
        setRet((FunctionReturn)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.FUNCTION_BODY__ARGS:
        return args != null && !args.isEmpty();
      case GoPackage.FUNCTION_BODY__RET:
        return ret != null;
    }
    return super.eIsSet(featureID);
  }

} //FunctionBodyImpl

/**
 * generated by Xtext 2.13.0
 */
package org.xtext.go.go.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.go.go.CallFor;
import org.xtext.go.go.Expression;
import org.xtext.go.go.F;
import org.xtext.go.go.GoPackage;
import org.xtext.go.go.Greeting;
import org.xtext.go.go.I;
import org.xtext.go.go.Intg;
import org.xtext.go.go.Numbers;
import org.xtext.go.go.Operations;
import org.xtext.go.go.T;
import org.xtext.go.go.varFor;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Numbers</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.go.go.impl.NumbersImpl#getO <em>O</em>}</li>
 *   <li>{@link org.xtext.go.go.impl.NumbersImpl#getX <em>X</em>}</li>
 *   <li>{@link org.xtext.go.go.impl.NumbersImpl#getBoolean <em>Boolean</em>}</li>
 *   <li>{@link org.xtext.go.go.impl.NumbersImpl#getSum <em>Sum</em>}</li>
 *   <li>{@link org.xtext.go.go.impl.NumbersImpl#getSub <em>Sub</em>}</li>
 *   <li>{@link org.xtext.go.go.impl.NumbersImpl#getInt <em>Int</em>}</li>
 *   <li>{@link org.xtext.go.go.impl.NumbersImpl#getD <em>D</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NumbersImpl extends TypeValueImpl implements Numbers
{
  /**
   * The cached value of the '{@link #getO() <em>O</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getO()
   * @generated
   * @ordered
   */
  protected EObject o;

  /**
   * The cached value of the '{@link #getX() <em>X</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected EObject x;

  /**
   * The cached value of the '{@link #getBoolean() <em>Boolean</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoolean()
   * @generated
   * @ordered
   */
  protected Expression boolean_;

  /**
   * The cached value of the '{@link #getSum() <em>Sum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSum()
   * @generated
   * @ordered
   */
  protected Expression sum;

  /**
   * The cached value of the '{@link #getSub() <em>Sub</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSub()
   * @generated
   * @ordered
   */
  protected Expression sub;

  /**
   * The cached value of the '{@link #getInt() <em>Int</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInt()
   * @generated
   * @ordered
   */
  protected Intg int_;

  /**
   * The cached value of the '{@link #getD() <em>D</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getD()
   * @generated
   * @ordered
   */
  protected org.xtext.go.go.Double d;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NumbersImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.NUMBERS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getO()
  {
    return o;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetO(EObject newO, NotificationChain msgs)
  {
    EObject oldO = o;
    o = newO;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__O, oldO, newO);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setO(EObject newO)
  {
    if (newO != o)
    {
      NotificationChain msgs = null;
      if (o != null)
        msgs = ((InternalEObject)o).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__O, null, msgs);
      if (newO != null)
        msgs = ((InternalEObject)newO).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__O, null, msgs);
      msgs = basicSetO(newO, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__O, newO, newO));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getX()
  {
    return x;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetX(EObject newX, NotificationChain msgs)
  {
    EObject oldX = x;
    x = newX;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__X, oldX, newX);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setX(EObject newX)
  {
    if (newX != x)
    {
      NotificationChain msgs = null;
      if (x != null)
        msgs = ((InternalEObject)x).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__X, null, msgs);
      if (newX != null)
        msgs = ((InternalEObject)newX).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__X, null, msgs);
      msgs = basicSetX(newX, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__X, newX, newX));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getBoolean()
  {
    return boolean_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBoolean(Expression newBoolean, NotificationChain msgs)
  {
    Expression oldBoolean = boolean_;
    boolean_ = newBoolean;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__BOOLEAN, oldBoolean, newBoolean);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBoolean(Expression newBoolean)
  {
    if (newBoolean != boolean_)
    {
      NotificationChain msgs = null;
      if (boolean_ != null)
        msgs = ((InternalEObject)boolean_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__BOOLEAN, null, msgs);
      if (newBoolean != null)
        msgs = ((InternalEObject)newBoolean).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__BOOLEAN, null, msgs);
      msgs = basicSetBoolean(newBoolean, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__BOOLEAN, newBoolean, newBoolean));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getSum()
  {
    return sum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSum(Expression newSum, NotificationChain msgs)
  {
    Expression oldSum = sum;
    sum = newSum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__SUM, oldSum, newSum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSum(Expression newSum)
  {
    if (newSum != sum)
    {
      NotificationChain msgs = null;
      if (sum != null)
        msgs = ((InternalEObject)sum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__SUM, null, msgs);
      if (newSum != null)
        msgs = ((InternalEObject)newSum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__SUM, null, msgs);
      msgs = basicSetSum(newSum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__SUM, newSum, newSum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getSub()
  {
    return sub;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSub(Expression newSub, NotificationChain msgs)
  {
    Expression oldSub = sub;
    sub = newSub;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__SUB, oldSub, newSub);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSub(Expression newSub)
  {
    if (newSub != sub)
    {
      NotificationChain msgs = null;
      if (sub != null)
        msgs = ((InternalEObject)sub).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__SUB, null, msgs);
      if (newSub != null)
        msgs = ((InternalEObject)newSub).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__SUB, null, msgs);
      msgs = basicSetSub(newSub, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__SUB, newSub, newSub));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Intg getInt()
  {
    return int_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInt(Intg newInt, NotificationChain msgs)
  {
    Intg oldInt = int_;
    int_ = newInt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__INT, oldInt, newInt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInt(Intg newInt)
  {
    if (newInt != int_)
    {
      NotificationChain msgs = null;
      if (int_ != null)
        msgs = ((InternalEObject)int_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__INT, null, msgs);
      if (newInt != null)
        msgs = ((InternalEObject)newInt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__INT, null, msgs);
      msgs = basicSetInt(newInt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__INT, newInt, newInt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.xtext.go.go.Double getD()
  {
    return d;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetD(org.xtext.go.go.Double newD, NotificationChain msgs)
  {
    org.xtext.go.go.Double oldD = d;
    d = newD;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__D, oldD, newD);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setD(org.xtext.go.go.Double newD)
  {
    if (newD != d)
    {
      NotificationChain msgs = null;
      if (d != null)
        msgs = ((InternalEObject)d).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__D, null, msgs);
      if (newD != null)
        msgs = ((InternalEObject)newD).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.NUMBERS__D, null, msgs);
      msgs = basicSetD(newD, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.NUMBERS__D, newD, newD));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.NUMBERS__O:
        return basicSetO(null, msgs);
      case GoPackage.NUMBERS__X:
        return basicSetX(null, msgs);
      case GoPackage.NUMBERS__BOOLEAN:
        return basicSetBoolean(null, msgs);
      case GoPackage.NUMBERS__SUM:
        return basicSetSum(null, msgs);
      case GoPackage.NUMBERS__SUB:
        return basicSetSub(null, msgs);
      case GoPackage.NUMBERS__INT:
        return basicSetInt(null, msgs);
      case GoPackage.NUMBERS__D:
        return basicSetD(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.NUMBERS__O:
        return getO();
      case GoPackage.NUMBERS__X:
        return getX();
      case GoPackage.NUMBERS__BOOLEAN:
        return getBoolean();
      case GoPackage.NUMBERS__SUM:
        return getSum();
      case GoPackage.NUMBERS__SUB:
        return getSub();
      case GoPackage.NUMBERS__INT:
        return getInt();
      case GoPackage.NUMBERS__D:
        return getD();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.NUMBERS__O:
        setO((EObject)newValue);
        return;
      case GoPackage.NUMBERS__X:
        setX((EObject)newValue);
        return;
      case GoPackage.NUMBERS__BOOLEAN:
        setBoolean((Expression)newValue);
        return;
      case GoPackage.NUMBERS__SUM:
        setSum((Expression)newValue);
        return;
      case GoPackage.NUMBERS__SUB:
        setSub((Expression)newValue);
        return;
      case GoPackage.NUMBERS__INT:
        setInt((Intg)newValue);
        return;
      case GoPackage.NUMBERS__D:
        setD((org.xtext.go.go.Double)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.NUMBERS__O:
        setO((EObject)null);
        return;
      case GoPackage.NUMBERS__X:
        setX((EObject)null);
        return;
      case GoPackage.NUMBERS__BOOLEAN:
        setBoolean((Expression)null);
        return;
      case GoPackage.NUMBERS__SUM:
        setSum((Expression)null);
        return;
      case GoPackage.NUMBERS__SUB:
        setSub((Expression)null);
        return;
      case GoPackage.NUMBERS__INT:
        setInt((Intg)null);
        return;
      case GoPackage.NUMBERS__D:
        setD((org.xtext.go.go.Double)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.NUMBERS__O:
        return o != null;
      case GoPackage.NUMBERS__X:
        return x != null;
      case GoPackage.NUMBERS__BOOLEAN:
        return boolean_ != null;
      case GoPackage.NUMBERS__SUM:
        return sum != null;
      case GoPackage.NUMBERS__SUB:
        return sub != null;
      case GoPackage.NUMBERS__INT:
        return int_ != null;
      case GoPackage.NUMBERS__D:
        return d != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == Operations.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == I.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == T.class)
    {
      switch (derivedFeatureID)
      {
        case GoPackage.NUMBERS__O: return GoPackage.T__O;
        default: return -1;
      }
    }
    if (baseClass == F.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Greeting.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == CallFor.class)
    {
      switch (derivedFeatureID)
      {
        case GoPackage.NUMBERS__X: return GoPackage.CALL_FOR__X;
        default: return -1;
      }
    }
    if (baseClass == varFor.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Expression.class)
    {
      switch (derivedFeatureID)
      {
        case GoPackage.NUMBERS__BOOLEAN: return GoPackage.EXPRESSION__BOOLEAN;
        case GoPackage.NUMBERS__SUM: return GoPackage.EXPRESSION__SUM;
        case GoPackage.NUMBERS__SUB: return GoPackage.EXPRESSION__SUB;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == Operations.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == I.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == T.class)
    {
      switch (baseFeatureID)
      {
        case GoPackage.T__O: return GoPackage.NUMBERS__O;
        default: return -1;
      }
    }
    if (baseClass == F.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Greeting.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == CallFor.class)
    {
      switch (baseFeatureID)
      {
        case GoPackage.CALL_FOR__X: return GoPackage.NUMBERS__X;
        default: return -1;
      }
    }
    if (baseClass == varFor.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Expression.class)
    {
      switch (baseFeatureID)
      {
        case GoPackage.EXPRESSION__BOOLEAN: return GoPackage.NUMBERS__BOOLEAN;
        case GoPackage.EXPRESSION__SUM: return GoPackage.NUMBERS__SUM;
        case GoPackage.EXPRESSION__SUB: return GoPackage.NUMBERS__SUB;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

} //NumbersImpl
